{"timeSaved":1645913292.1728,"options":{"loops":{"timePosition":[0.184,0.129,0.127,0.363,0.472,0.532,0.638,0.753,0.912,0.875,0.736,0.46,0.317,0.381,0.555,0.8,1.072,1.304,1.082,0.912,1.286,1.542,1.065,0.957,1.389,1.342,1.115,0.882,0.597,0.368,0.349,0.158]},"brightAddRed":20,"brightAddGreen":20,"brightAddBlue":50,"brightMult":90,"accelFieldMul":89415464119,"bootShapeY":0.01,"bootShapeX":0.01,"bootShapeScale":1,"nearPdist":0.037,"friction":0,"loopSeconds":30,"useTimePosition":true,"timePosition":13.896,"timePositionDecay":0.29,"timeSpeed":0.831,"minPointsPerCurve":260,"maxPointsPerCurve":1683,"maxNumPointsPerCurveChangeAtOnce":398,"borderFraction":0.663,"maxSpeed":0.067,"targetDistanceBetweenAdjacentCurvePoints":0.005,"maxCurvesPerReef":10000,"scalePotentialEnergyForce":2600262964.335,"ampStraightIfNear":205550724583.181,"maxDistanceToAffectEachother":0.052,"addRandomness":10989762047002.695,"stayInsideBorderCircleForce":5361433391626.719,"distanceScale":0.023,"pause":false,"attractIfFartherThan":0.4,"ampAttractIfFartherThan":0.136,"graphEndist":true,"isSurface":false,"displayOuterCircle":true,"ifCanvasUseUndoGraphics":true,"negTimeDoesUndo":true,"autoMoveTimeSpeedSlider":false,"balanceSparsity":true,"onlyEndist":false,"setSpeedsToZeroAfterEveryDtMove":false,"freqA":46.893,"ampA":-38393023.051,"freqB":15.682,"ampB":16205548.478,"freqC":54.302,"ampC":-10079006.08,"midDist":0.059,"bellAAveMul":0.159,"bellADevMul":0.141,"bellAHeight":583817029.826,"bellBAveMul":0.05,"bellBDevMul":0.162,"bellBHeight":162910897.435,"bellCAveMul":0.445,"bellCDevMul":0.068,"bellCHeight":155275946.843,"forceMaxResolution":true,"stretchToWindow":true,"canvasElseSvg":true,"isEraseCanvasEachFrame":true,"repelSelf":49280.617,"repelSelfDistance":40.162,"computeSpeed":1.291,"colorSeed":8400328863760,"colorDecayPerSec":1.166,"accelVoxels":[],"endist":"(en,dist,pdist)=>{ let x = 0; let p = o; let nd = p.nearPdist; let near = sigmoid(-5*(dist-nd)); if(dist > o.attractIfFartherThan) x += o.ampAttractIfFartherThan*sqr(dist-o.attractIfFartherThan); x += o.ampStraightIfNear*near*sqr(dist-pdist); let midDist = p.midDist; x += bell(midDist*p.bellAAveMul,midDist*p.bellADevMul,p.bellAHeight,dist); x += bell(midDist*p.bellBAveMul,midDist*p.bellBDevMul,p.bellBHeight,dist); x += bell(midDist*p.bellCAveMul,midDist*p.bellCDevMul,p.bellCHeight,dist); let m=dist*twoPi; x += sin(m*p.freqA)*p.ampA; x += sin(m*p.freqB)*p.ampB; x += sin(m*p.freqC)*p.ampC; x += en; return x; }","name":"normal reef xyz","isOnlyMoveRandomlyPerpendicularToSurface":false,"graphEndistBright":"Math.sqrt","bootShape":"a=>.2","dir":"2"}}