{"timeSaved":1646657861.5817,"options":{"brightAddRed":16.26,"brightAddGreen":18.661,"brightAddBlue":50.453,"brightMult":15.853,"accelFieldMul":247682094470241920,"bootShapeY":0.01,"bootShapeX":0.01,"bootShapeScale":0.689,"nearPdist":0.059,"friction":0,"loopSeconds":34.298,"useTimePosition":true,"timePosition":31.354,"timePositionDecay":0.519,"timeSpeed":2.805,"minPointsPerCurve":202,"maxPointsPerCurve":969,"maxNumPointsPerCurveChangeAtOnce":117,"borderFraction":0.663,"maxSpeed":0.03,"targetDistanceBetweenAdjacentCurvePoints":0.015,"maxCurvesPerReef":10000,"scalePotentialEnergyForce":160518313.363,"ampStraightIfNear":122191956993575.39,"maxDistanceToAffectEachother":0.078,"addRandomness":977270.061,"stayInsideBorderCircleForce":106692524493371.69,"distanceScale":1.137,"pause":false,"attractIfFartherThan":0.4,"ampAttractIfFartherThan":12.473,"graphEndist":true,"isSurface":true,"displayOuterCircle":true,"ifCanvasUseUndoGraphics":true,"negTimeDoesUndo":true,"autoMoveTimeSpeedSlider":false,"balanceSparsity":true,"onlyEndist":false,"setSpeedsToZeroAfterEveryDtMove":false,"freqA":47.36,"ampA":8052.405,"freqB":8.676,"ampB":54534734396035.43,"freqC":13.545,"ampC":467412.207,"midDist":0.055,"bellAAveMul":0.461,"bellADevMul":0.355,"bellAHeight":-56301688100574.22,"bellBAveMul":0.849,"bellBDevMul":0.375,"bellBHeight":-32491627388357.574,"bellCAveMul":-3.398,"bellCDevMul":1.999,"bellCHeight":-910548807682.272,"forceMaxResolution":true,"stretchToWindow":true,"canvasElseSvg":true,"isEraseCanvasEachFrame":true,"repelSelf":49280.617,"repelSelfDistance":40.162,"computeSpeed":1.211,"colorSeed":50592243628112,"colorDecayPerSec":0.558,"endist":"(en,dist,pdist)=>{ let x = 0; let p = o; let nd = p.nearPdist; let near = sigmoid(-5*(dist-nd)); if(dist > o.attractIfFartherThan) x += o.ampAttractIfFartherThan*sqr(dist-o.attractIfFartherThan); x += o.ampStraightIfNear*near*sqr(dist-pdist); let midDist = p.midDist; x += bell(midDist*p.bellAAveMul,midDist*p.bellADevMul,p.bellAHeight,dist); x += bell(midDist*p.bellBAveMul,midDist*p.bellBDevMul,p.bellBHeight,dist); x += bell(midDist*p.bellCAveMul,midDist*p.bellCDevMul,p.bellCHeight,dist); let m=dist*twoPi; x += sin(m*p.freqA)*p.ampA; x += sin(m*p.freqB)*p.ampB; x += sin(m*p.freqC)*p.ampC; x += en; return x; }","graphEndistBright":"Math.sqrt","bootShape":"a=>.1*a","isOnlyMoveRandomlyPerpendicularToSurface":false,"lineThick":1,"paintBrightMult":0.999,"accelVoxels":[],"loops":{"timePosition":[-0.229,-0.178,0.652,0.606,0.293,0.939,1.253,0.564,0.386,1.386,1.067,0.68,2.006,0.763,1.46,1.674,0.75,1.09,0.194,0.873,0.605,1.906,2.631,2.187,1.103,1.911,1.116,1.36,1.312,0.592,0.595,0.126]},"name":"hypevision","dir":"3"}}