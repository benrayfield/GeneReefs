{"timeSaved":1647345622.4624,"options":{"loops":{"timePosition":[0.46,0.192,0.317,0.331,0.712,0.584,0.944,1.325,1.047,0.56,0.416,0.479,0.989,1.292,1.378,1.11,0.805,0.777,1.065,1.758,1.549,1.625,0.86,-0.51,-0.561,-1.007,-1.177,-0.81,-0.599,-0.643,1.045,0.765]},"brightAddRed":20,"brightAddGreen":20,"brightAddBlue":50,"brightMult":90,"accelFieldMul":89415464119,"bootShapeY":0.01,"bootShapeX":0.01,"bootShapeScale":1,"nearPdist":2.496,"friction":0,"loopSeconds":39.214,"useTimePosition":true,"timePosition":84.399,"timePositionDecay":0.068,"timeSpeed":0.701,"minPointsPerCurve":27,"maxPointsPerCurve":844,"maxNumPointsPerCurveChangeAtOnce":34,"borderFraction":0.663,"maxSpeed":0.026,"targetDistanceBetweenAdjacentCurvePoints":0.01,"maxCurvesPerReef":10000,"scalePotentialEnergyForce":197190042.945,"ampStraightIfNear":79392814.054,"maxDistanceToAffectEachother":0.088,"addRandomness":278914969.097,"stayInsideBorderCircleForce":5361433391626.719,"distanceScale":0.023,"pause":false,"attractIfFartherThan":0.4,"ampAttractIfFartherThan":0.136,"graphEndist":true,"isSurface":false,"displayOuterCircle":true,"ifCanvasUseUndoGraphics":true,"negTimeDoesUndo":true,"autoMoveTimeSpeedSlider":false,"balanceSparsity":true,"onlyEndist":false,"setSpeedsToZeroAfterEveryDtMove":false,"freqA":46.893,"ampA":9666.123,"freqB":15.682,"ampB":69413.786,"freqC":54.302,"ampC":73375.13,"midDist":0.059,"bellAAveMul":0.292,"bellADevMul":0.07,"bellAHeight":44896991.491,"bellBAveMul":0.053,"bellBDevMul":154.749,"bellBHeight":2583567803996.104,"bellCAveMul":0.593,"bellCDevMul":0.199,"bellCHeight":-124131366.661,"forceMaxResolution":true,"stretchToWindow":true,"canvasElseSvg":true,"isEraseCanvasEachFrame":true,"repelSelf":49280.617,"repelSelfDistance":40.162,"computeSpeed":1.291,"colorSeed":105355064759923,"colorDecayPerSec":0.376,"accelVoxels":[],"endist":"(en,dist,pdist)=>{ let x = 0; let p = o; let nd = p.nearPdist; let near = sigmoid(-5*(dist-nd)); if(dist > o.attractIfFartherThan) x += o.ampAttractIfFartherThan*sqr(dist-o.attractIfFartherThan); x += o.ampStraightIfNear*near*sqr(dist-pdist); let midDist = p.midDist; x += bell(midDist*p.bellAAveMul,midDist*p.bellADevMul,p.bellAHeight,dist); x += bell(midDist*p.bellBAveMul,midDist*p.bellBDevMul,p.bellBHeight,dist); x += bell(midDist*p.bellCAveMul,midDist*p.bellCDevMul,p.bellCHeight,dist); let m=dist*twoPi; x += sin(m*p.freqA)*p.ampA; x += sin(m*p.freqB)*p.ampB; x += sin(m*p.freqC)*p.ampC; x += en; return x; }","name":"thin branches","isOnlyMoveRandomlyPerpendicularToSurface":false,"graphEndistBright":"Math.sqrt","bootShape":"a=>.2","paintBrightAdd":3,"lineThick":1,"paintBrightMult":0.999,"brightMultRed":1.01,"brightMultGreen":1.01,"brightMultBlue":1.01,"sameColorness":0.01,"dir":"2"}}