{"timeSaved":1646072779.0836,"options":{"loops":{"timePosition":[0.184,0.129,0.127,0.363,0.472,0.532,0.638,0.753,0.912,0.875,0.736,0.46,0.317,0.381,0.555,0.8,1.072,1.304,1.082,0.912,1.286,1.542,1.065,0.957,1.389,1.342,1.115,0.882,0.597,0.368,0.349,0.158]},"brightAddRed":20,"brightAddGreen":20,"brightAddBlue":50,"brightMult":90,"accelFieldMul":89415464119,"bootShapeY":0.01,"bootShapeX":0.01,"bootShapeScale":0.205,"nearPdist":0.046,"friction":0,"loopSeconds":30,"useTimePosition":true,"timePosition":6.769,"timePositionDecay":0.29,"timeSpeed":0.831,"minPointsPerCurve":137,"maxPointsPerCurve":1459,"maxNumPointsPerCurveChangeAtOnce":398,"borderFraction":0.604,"maxSpeed":0.116,"targetDistanceBetweenAdjacentCurvePoints":0.012,"maxCurvesPerReef":10000,"scalePotentialEnergyForce":41.869,"ampStraightIfNear":5698282.162,"maxDistanceToAffectEachother":0.073,"addRandomness":1910.521,"stayInsideBorderCircleForce":5361433391626.719,"distanceScale":0.229,"pause":false,"attractIfFartherThan":0.4,"ampAttractIfFartherThan":-2.974,"graphEndist":true,"isSurface":false,"displayOuterCircle":true,"ifCanvasUseUndoGraphics":true,"negTimeDoesUndo":true,"autoMoveTimeSpeedSlider":false,"balanceSparsity":true,"onlyEndist":false,"setSpeedsToZeroAfterEveryDtMove":false,"freqA":62.046,"ampA":280799.142,"freqB":-49.363,"ampB":651548.49,"freqC":6.058,"ampC":16815.684,"midDist":0.039,"bellAAveMul":0.416,"bellADevMul":0.214,"bellAHeight":12202510.249,"bellBAveMul":2.796,"bellBDevMul":0.474,"bellBHeight":1412927.023,"bellCAveMul":7.343,"bellCDevMul":18.857,"bellCHeight":-11199.086,"forceMaxResolution":true,"stretchToWindow":true,"canvasElseSvg":true,"isEraseCanvasEachFrame":true,"repelSelf":49280.617,"repelSelfDistance":40.162,"computeSpeed":1.003,"colorSeed":8400328863760,"colorDecayPerSec":3,"accelVoxels":[],"endist":"(en,dist,pdist)=>{ let x = 0; let p = o; let nd = p.nearPdist; let near = sigmoid(-5*(dist-nd)); if(dist > o.attractIfFartherThan) x += o.ampAttractIfFartherThan*sqr(dist-o.attractIfFartherThan); x += o.ampStraightIfNear*near*sqr(dist-pdist); let midDist = p.midDist; x += bell(midDist*p.bellAAveMul,midDist*p.bellADevMul,p.bellAHeight,dist); x += bell(midDist*p.bellBAveMul,midDist*p.bellBDevMul,p.bellBHeight,dist); x += bell(midDist*p.bellCAveMul,midDist*p.bellCDevMul,p.bellCHeight,dist); let m=dist*twoPi; x += sin(m*p.freqA)*p.ampA; x += sin(m*p.freqB)*p.ampB; x += sin(m*p.freqC)*p.ampC; x += en; return x; }","name":"cell 3 smaller branches few bubbles","isOnlyMoveRandomlyPerpendicularToSurface":false,"graphEndistBright":"Math.sqrt","bootShape":"a=>.2","dir":"1"}}