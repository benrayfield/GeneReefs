{"timeSaved":1644491780.7696002,"options":{"loops":{"timePosition":[0.03219524398446083,-0.1382308006286621,1.3316137790679932,1.091830849647522,0.5267090797424316,0.6850653290748596,0.5836572647094727,0.7113385796546936]},"bootShapeY":0.01,"bootShapeX":0.01,"bootShapeScale":1.959880882205566,"nearPdist":0.046,"friction":0,"loopSeconds":30,"useTimePosition":true,"timePosition":11.073,"timePositionDecay":0.29,"timeSpeed":0.831,"minPointsPerCurve":137,"maxPointsPerCurve":700,"maxNumPointsPerCurveChangeAtOnce":398,"borderFraction":0.663,"maxSpeed":0.116,"targetDistanceBetweenAdjacentCurvePoints":0.012,"maxCurvesPerReef":10000,"scalePotentialEnergyForce":2.104,"ampStraightIfNear":334008857.205,"maxDistanceToAffectEachother":0.108,"addRandomness":176957.849,"stayInsideBorderCircleForce":679714977.4019277,"distanceScale":0.023,"pause":false,"attractIfFartherThan":0.3491299507674988,"ampAttractIfFartherThan":22765.600000000002,"graphEndist":true,"isSurface":true,"displayOuterCircle":true,"ifCanvasUseUndoGraphics":true,"negTimeDoesUndo":true,"autoMoveTimeSpeedSlider":false,"balanceSparsity":true,"onlyEndist":false,"setSpeedsToZeroAfterEveryDtMove":false,"freqA":76.709,"ampA":339667.758,"freqB":-2.88,"ampB":106943.22752986252,"freqC":5.702055151675051,"ampC":-781559.342,"midDist":0.057,"bellAAveMul":0.585279217093675,"bellADevMul":-0.20228130032711455,"bellAHeight":73543382.06641628,"bellBAveMul":3.450589840703645,"bellBDevMul":0.01904070452262497,"bellBHeight":1412927.023,"bellCAveMul":-3.3953444663618586,"bellCDevMul":-417.6390809367723,"bellCHeight":-11199.086,"forceMaxResolution":true,"stretchToWindow":true,"canvasElseSvg":true,"isEraseCanvasEachFrame":true,"repelSelf":49280.617,"repelSelfDistance":40.162,"computeSpeed":1.291,"colorSeed":18198309977625,"colorDecayPerSec":3,"endist":"(en,dist,pdist)=>{ let x = 0; let p = o; let nd = p.nearPdist; let near = sigmoid(-5*(dist-nd)); if(dist > o.attractIfFartherThan) x += o.ampAttractIfFartherThan*sqr(dist-o.attractIfFartherThan); x += o.ampStraightIfNear*near*sqr(dist-pdist); let midDist = p.midDist; x += bell(midDist*p.bellAAveMul,midDist*p.bellADevMul,p.bellAHeight,dist); x += bell(midDist*p.bellBAveMul,midDist*p.bellBDevMul,p.bellBHeight,dist); x += bell(midDist*p.bellCAveMul,midDist*p.bellCDevMul,p.bellCHeight,dist); let m=dist*twoPi; x += sin(m*p.freqA)*p.ampA; x += sin(m*p.freqB)*p.ampB; x += sin(m*p.freqC)*p.ampC; x += en; return x; }","name":"3dREEF3v4","dir":"2"}}